#does capsule need validation against xsd
#dhx.capsule-validate=true
#in MB, optional presented default value
#dhx.max-file-size=100
#is recipient check needed, optional presented default value
#dhx.check-recipient=true
#is filesize check needed, optional presented default value
#dhx.check-filesize=false
#is check for duplicate documents needed, optional presented default value
#dhx.check-duplicate=true
#is capsule parsing needed when sending or receiving document, optional presented default value
dhx.parse-capsule=true
#location of the capsule XSD, optional presented default value
#dhx.xsd.capsule-xsd-file21=jar://Dvk_kapsel_vers_2_1_eng_est.xsd
#current version of the capsule to send and receive, optional presented default value
#dhx.xsd.current-capsule-version=V21
#name of the wsdl file in classpath, default dhx.wsdl
#dhx.wsdl-file=dhx.wsdl
#packages used for marshalling and unmarshalling
dhx.marshall-context=ee.ria.dhx.types.ee.riik.schemas.deccontainer.vers_2_1:ee.ria.dhx.server.types.ee.riik.xrd.dhl.producers.producer.dhl:ee.ria.dhx.types.eu.x_road.dhx.producer:ee.ria.dhx.types.eu.x_road.xsd.identifiers:ee.ria.dhx.types.eu.x_road.xsd.representation:ee.ria.dhx.types.eu.x_road.xsd.xroad



#soap
# optional presented default value
#soap.targetnamespace=http://dhx.x-road.eu/producer
#soap.security-server-appender=/cgi-bin/consumer_proxy


soap.security-server=http://192.168.1.1
soap.xroad-instance=EE
soap.member-class=COM
soap.protocol-version=4.0
soap.member-code=00000000

## TLS connection configuration ##
# While setting 'soap.security-server' property as HTTPS url the following properties need to be defined.
#
# For testing purposes only! While setting "HTTPS NO AUTH" in security server needs to be set 'true'
# soap.client-keystore.no-auth=false
#
# Client keystore parameters. Not required if 'soap.client-keystore.no-auth' equals 'true'.
soap.client-keystore-file=dhx.jks
soap.client-keystore-password=changeit
soap.client-keystore-type=JKS

# Truststore parameters. Keystore containing security server certificate's certificate chain.
soap.client-truststore-file=${JAVA_HOME}/jre/lib/security/cacerts
soap.client-truststore-password=changeit
soap.client-truststore-type=JKS

#javax.net.debug=ssl


#prefix to search DHX adressees
#dhx-subsystem-prefix=dhx
#if subsystem is not provided when sending document, then using this
#soap.default-subsystem=DHX
#comma esparated list of accepted subsystems, in case if server accepts documents for several subsystems at a time
soap.accepted-subsystems=DHX,DHX.subsystem

# optional presented default values
#soap.global-conf-location=http://x-road.eu/packages/EE_public-anchor.xml
#soap.global-conf-filename=shared-params.xml
#soap.dhx-representation-group-name=DHX vahendajad
#soap.send-document-service-code=sendDocument
#soap.representatives-service-code=representationList
#soap.send-document-service-version=v1
#soap.representatives-service-version=v1
#soap.connection-timeout=60000
#soap.read-timeout=60000
#soap.http-timeout=300

# # # # #
# Increasing memory efficiency while sending large documents
# # # # #
# Tells DHX to use filesystem caching instead of memory if attachment size is bigger than following value in MB.
#soap.dhx.attachment.cache.threshold=10
# Specify directory to be used for caching. By default Java temp directory.
#soap.dhx.attachment.cache.dir=

#template representing how many times and with how bug timeouts document will be resent. 
#for example 120,900,3600 means that after first failed try application will wait 2 minutes (120 seconds) and try again. 
#If second attempt fails, then there will be 15 minutes (900 seconds) timeout before third attempt and so on
dhx.document-resend-template=120,900,3600

#frequency of the address renewal. cron expression
address-renew-timeout=0 0 7 * * ?

#frequency of sending documents to DHX. cron expression
dhx.server.send-to-dhx=*/20 * * * * ?


#special DVK subsystems which are delivered without organisation code, but only with system name
dhx.server.special-organisations=adit,kovtp,rt,eelnoud

#delete-all means that wole document and all database rows will be deleted. 
#delete-content means that only content of the document will be deleted and all database rows will stay.
#all other values mean that documents will NOT be deleted.
dhx.server.delete-old-documents=delete-all

#frequency of document deleting job. cron expression
dhx.server.delete-old-documents-freq=0 0 6 * * ?

#lifetime of the succesfully received document in days. 
#after that time document will be chosen for deleting if 
#parameter dhx.server.delete-old-documents states that document deleting is enabled
dhx.server.received-document-lifetime=30

#lifetime of the failed document in days. 
#after that time document will be chosen for deleting if 
#parameter dhx.server.delete-old-documents states that document deleting is enabled
dhx.server.failed-document-lifetime=30

#job will find not sent documents and will start asyncronous sending, 
#but if asyncronous sending after timeout did not set the result, then try to send again.
#in minutes. must be bigger than sum of the document-resend-template
dhx.resend.timeout=120

#documents will be saved in this folder and will be referenced in Document database table
documents.folder=C:\\dhx_docs\\

spring.datasource.url=jdbc:postgresql://localhost:5432/dhx_adapter_dev
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQL94Dialect
spring.jpa.show-sql = true

#spring.datasource.url=jdbc:oracle:thin:dhxadapter/dhxadapter123@localhost:1521:xe
#spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect
#spring.datasource.username=dhxadapter
#spring.datasource.password=dhxadapter123
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.type=oracle.jdbc.pool.OracleDataSource

management.security.enabled=false
