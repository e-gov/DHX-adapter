version: "2.1"

services:
  setup-wiremock:
    build: conf/setup
    command: "sh -c 'curl -L https://github.com/RasmusSoot/wiremock-proxy/releases/download/v1.0/wiremock-proxy-1.0.jar -o /data/conf/wiremock/extensions/wiremock-proxy-1.0.jar && cd /data/conf/wiremock && zip stubs/__files/verificationconf.zip verificationconf/ -r'"
    volumes:
    - ".:/data"

  setup-hobekuul:
    build: conf/postgres-client
    environment:
    - PGPASSWORD=secret
    command: sh -c "psql -v ON_ERROR_STOP=1 -h postgres-hobekuul -d dhx_adapter -U postgres -p 5432 -a -w -f /data/esindatavad_asutused.sql"
    volumes:
    - "./conf/hobekuul:/data"
    depends_on:
      dhx-adapter-hobekuul:
        condition: service_healthy

  postgres-hobekuul:
    image: postgres:12.2
    ports:
    - "0.0.0.0:5432:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
    - data-hobekuul:/var/lib/postgresql/data
    - "./conf/postgres/init_postgres_database.sql:/docker-entrypoint-initdb.d/init_postgres_database.sql"
    - "./conf/postgres/postgresql.conf:/etc/postgresql/postgresql.conf"
    healthcheck:
      test: ["CMD-SHELL", "psql postgresql://dhxuser:123@localhost:5432/dhx_adapter -c 'select 1;'"]
      interval: 5s
      timeout: 5s
      retries: 15
    environment:
    - POSTGRES_PASSWORD=secret
    - POSTGRES_USER=postgres
    - POSTGRES_DB=dhx_adapter

  postgres-test:
    image: postgres:12.2
    ports:
    - "0.0.0.0:5433:5432"
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    volumes:
    - data-test:/var/lib/postgresql/data
    - "./conf/postgres/init_postgres_database.sql:/docker-entrypoint-initdb.d/init_postgres_database.sql"
    - "./conf/postgres/postgresql.conf:/etc/postgresql/postgresql.conf"
    environment:
    - POSTGRES_PASSWORD=secret
    - POSTGRES_USER=postgres
    - POSTGRES_DB=dhx_adapter
    healthcheck:
      test: ["CMD-SHELL", "psql postgresql://dhxuser:123@localhost:5432/dhx_adapter -c 'select 1;'"]
      interval: 5s
      timeout: 5s
      retries: 15

  dhx-adapter-hobekuul:
    image: tomcat:8.5
    ports:
    - "0.0.0.0:8080:8080"
    - "0.0.0.0:8443:8443"
    - "0.0.0.0:1198:1198"
    volumes:
    - documents-hobekuul:/documents
    - "../dhx-adapter-server/target/dhx-adapter-server.war:/usr/local/tomcat/webapps/dhx-adapter-server.war"
    - "./conf/tomcat/dhx-application-hobekuul.properties:/conf/dhx-application.properties"
    - "./conf/tomcat/log4j2.xml:/conf/log4j2.xml"
    - "./conf/tomcat/catalina.properties:/usr/local/tomcat/conf/catalina.properties"
    - "./conf/tomcat//context.xml:/usr/local/tomcat/conf/context.xml"
    - "./conf/tomcat/server.xml:/usr/local/tomcat/conf/server.xml"
    environment:
      CATALINA_OPTS: -agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n
      JAVA_OPTS: -Xms16g -Xmx16g -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1198 -Dcom.sun.management.jmxremote.rmi.port=1198 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=dhx-local -Dcom.sun.management.jmxremote.local.only=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/dhx-adapter-server/health"]
      interval: 1s
      timeout: 1s
      retries: 30
    depends_on:
      postgres-hobekuul:
        condition: service_healthy
      xroad-mock:
        condition: service_started

  dhx-adapter-test:
    image: tomcat:8.5
    ports:
    - "0.0.0.0:8081:8080"
    - "0.0.0.0:8444:8443"
    - "0.0.0.0:5005:5005"
    - "0.0.0.0:1199:1199"
    volumes:
    - documents-test:/documents
    - "../dhx-adapter-server/target/dhx-adapter-server.war:/usr/local/tomcat/webapps/dhx-adapter-server.war"
    - "./conf/tomcat/dhx-application-test.properties:/conf/dhx-application.properties"
    - "./conf/tomcat/log4j2.xml:/conf/log4j2.xml"
    - "./conf/tomcat/catalina.properties:/usr/local/tomcat/conf/catalina.properties"
    - "./conf/tomcat//context.xml:/usr/local/tomcat/conf/context.xml"
    - "./conf/tomcat/server.xml:/usr/local/tomcat/conf/server.xml"
    environment:
      CATALINA_OPTS: -agentlib:jdwp=transport=dt_socket,address=5005,server=y,suspend=n
      JAVA_OPTS: -Xms1g -Xmx1g -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=1199 -Dcom.sun.management.jmxremote.rmi.port=1199 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=dhx-local -Dcom.sun.management.jmxremote.local.only=false
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/dhx-adapter-server/health"]
      interval: 1s
      timeout: 1s
      retries: 30
    depends_on:
      setup-hobekuul:
        condition: service_started
      postgres-test:
        condition: service_healthy
      xroad-mock:
        condition: service_started

  xroad-mock:
    image: rodolpheche/wiremock:2.24.1-alpine
    ports:
    - "0.0.0.0:8083:8080"
    volumes:
    - "./conf/wiremock/stubs:/home/wiremock"
    - "./conf/wiremock/extensions:/var/wiremock/extensions"
    command: '--no-request-journal --extensions com.github.rasmussoot.wiremock.WireMockProxyTransformer'

  nginx:
    image: nginx:latest
    ports:
    - "0.0.0.0:80:80"
    - "0.0.0.0:443:443"
    volumes:
    - ./conf/nginx/nginx.conf:/etc/nginx/nginx.conf
    - ./conf/wiremock/stubs/__files/:/www/data
    depends_on:
      dhx-adapter-test:
        condition: service_started
volumes:
  data-hobekuul:
  data-test:
  documents-test:
  documents-hobekuul:
